chown root:wheel "/yoossa"
chown 700 "/yoossa"

if [ -f /yoossa/tls.key ] ; then
  echo "[ok] TLS keys for https endpoint"
else
  echo "[create] TLS keys for https endpoint"
  cat > /yoossa/request.txt <<INNER_EOF
[req]
default_bits = 4096
default_md = sha256
distinguished_name = req_distinguished_name
x509_extensions = v3_req
prompt = no
[req_distinguished_name]
C = NA
ST = NA
L = NA
O = NA
OU = NA
CN = yoossa.local
[v3_req]
keyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment
extendedKeyUsage = serverAuth
subjectAltName = @alt_names
[alt_names]
DNS.1 = yoossa.local
DNS.2 = localhost
IP.1 = 127.0.0.1
INNER_EOF
  openssl req -new -nodes -x509 -days 36500 -newkey rsa:2048 -keyout /yoossa/tls.key -out /yoossa/tls.crt -config /yoossa/request.txt 
fi

if [ -f /yoossa/yoossa.toml ] ; then
  echo "[ok] Config: /yoossa/yoossa.toml"
else
  echo "[create] Config: /yoossa/yoossa.toml"
  echo "[create] Secret-key for web server"
  SECRET_KEY="$( openssl rand -base64 128 | strings | grep -o '[[:alnum:]]' | head -n 64 | tr -d '\n'; echo )"
  cp /yoossa/yoossa.toml.sample /yoossa/yoossa.toml
  sed -i '' -e "s/CHANGE-ME/${SECRET_KEY}/g" /yoossa/yoossa.toml
  chown root:wheel /yoossa/yoossa.toml
  chmod 600 /yoossa/yoossa.toml
fi
